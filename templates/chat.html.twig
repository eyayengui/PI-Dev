{# templates/chat/chatbot.html.twig #}

{% block chatbot %}
<style>
    /* Chatbot CSS */

    /* Container for the chat interface */
    #chat-box {
        width: 350px;
        background-color: #f7f7f7;
        border-radius: 15px;
        box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.2);
        overflow: hidden;
        font-family: 'Arial', sans-serif;
        margin: 0 auto;
        position: fixed;
        bottom: 20px;
        right: 20px;
        z-index: 1000;
    }

    /* Container for the chat messages */
    #messages {
        height: 300px;
        overflow-y: auto;
        padding: 10px;
    }

    /* User message styling */
    #messages > div.user-msg {
        background-color: #d1eaff;
        padding: 8px 15px;
        border-radius: 15px;
        margin: 5px;
        text-align: right;
        clear: both;
    }

    /* Bot message styling */
    #messages > div.bot-msg {
        background-color: #ffffff;
        padding: 8px 15px;
        border-radius: 15px;
        margin: 5px;
        text-align: left;
        clear: both;
    }

    /* Input for the user to type their message */
    #message-input {
        border: none;
        padding: 10px;
        width: calc(100% - 60px);
        border-top: 1px solid #dddddd;
    }

    /* Send button */
    #send-btn {
        width: 60px;
        background-color: #005fff;
        border: none;
        padding: 10px;
        color: white;
    }

    /* Add additional responsiveness to input/button */
    #message-input, #send-btn {
        float: left;
    }

    /* Clear floats */
    #chat-box::after {
        content: "";
        clear: both;
        display: table;
    }
        #chat-toggle {
        background-color: #005fff;
        color: white;
        position: fixed;
        bottom: 20px;
        right: 20px;
        width: 50px;
        height: 50px;
        border-radius: 50%;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 24px;
        z-index: 1001; /* Ensures button is above chatbox */
    }

    /* Initially hide the chatbox */
    #chat-box {
        display: none;
        /* Other styles... */
    }
</style>

<div id="chat-toggle">ðŸ’¬</div>
<div id="chat-box">
    <div id="messages"></div>
    <input type="text" id="message-input" placeholder="Ecrice un message...">
    <button id="send-btn">Envoyer</button>
</div>


<script>
 // Function to toggle the chat box
    function toggleChatBox() {
        var chatBox = document.getElementById('chat-box');
        chatBox.style.display = chatBox.style.display === 'block' ? 'none' : 'block';
    }

    // Event listener for chat toggle button
    document.getElementById('chat-toggle').addEventListener('click', toggleChatBox);

    document.getElementById('send-btn').onclick = function() {
        var input = document.getElementById('message-input');
        var message = input.value;
        input.value = ''; // Clear the input after sending a message
        
        // Display the user's message
        var messagesDiv = document.getElementById('messages');
        messagesDiv.innerHTML += '<div class="user-msg">You: ' + message + '</div>';

        fetch('{{ path('chat_message') }}', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
            },
            body: 'message=' + encodeURIComponent(message)
        })
        .then(response => response.json())
        .then(data => {
            // Display the bot's response
            messagesDiv.innerHTML += '<div class="bot-msg">Bot: ' + data.response + '</div>';
        })
        .catch(error => console.error('Error:', error));
    };
</script>
{% endblock %}
